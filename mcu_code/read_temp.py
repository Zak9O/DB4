"""
    HOW TO USE
    First initialize the temperature sensors
    Then you can pass the sensors to the read_temp function
"""

from machine import Pin
from machine import ADC
from machine import DAC
from math import log

import machine
import utime

class TemperatureSensor:

    adc_V_lookup

    NOM_RES = 10000
    SER_RES = 9820
    TEMP_NOM = 25
    NUM_SAMPLES = 25
    THERM_B_COEFF = 3950
    ADC_MAX = 1023
    ADC_VMAX = 3.3

    def __init__(self, TENP_SENS_ADC_PIN_NO = 32):
        self.temp_sens = self.init_temp_sensor(TENP_SENS_ADC_PIN_NO)


    def init_temp_sensor(self, TENP_SENS_ADC_PIN_NO):
        adc = ADC(Pin(TENP_SENS_ADC_PIN_NO))
        adc.atten(ADC.ATTN_11DB)
        adc.width(ADC.WIDTH_10BIT)
        return adc

    def read_temp(self):
        raw_read = []
        # Collect NUM_SAMPLES
        for i in range(1, self.NUM_SAMPLES+1):
            raw_read.append(self.temp_sens.read())

        # Average of the NUM_SAMPLES and look it up in the table
        raw_average = sum(raw_read)/self.NUM_SAMPLES

        # Convert to resistance
        raw_average = self.ADC_MAX * self.adc_V_lookup[round(raw_average)]/self.ADC_VMAX
        resistance = (self.SER_RES * raw_average) / (self.ADC_MAX - raw_average)
        # Convert to temperature
        steinhart  = log(resistance / self.NOM_RES) / self.THERM_B_COEFF
        steinhart += 1.0 / (self.TEMP_NOM + 273.15)
        steinhart  = (1.0 / steinhart) - 273.15
        return steinhart - 1.4 # Constant is subtracted because of thermometer calibration
